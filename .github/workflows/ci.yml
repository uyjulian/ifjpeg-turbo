name: Continuous Integration
on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"
      - "Makefile"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.build"
      - "**.in"
      - "**.yml"
      - "Makefile"

jobs:
  build-win32:
    runs-on: ubuntu-20.04
    env:
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_UPGRADE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up default build tools
        run: |
          brew install make nasm cmake meson ninja
      - name: Set up mingw-w64
        run: |
          brew install mingw-w64
      - run: make archive -j$(getconf _NPROCESSORS_ONLN)
      - uses: actions/upload-artifact@master
        with:
          name: binary-win32
          path: ./*.7z

  create-release:
    needs: [build-win32]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    steps:
    - name: Download win32 artifact
      uses: actions/download-artifact@v1
      with:
        name: binary-win32

    - name: Create prerelease
      if: github.ref == 'refs/heads/master'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "latest"
        title: "Latest development builds"
        files: |
          binary-win32/*

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: "${{ contains(github.ref, '-rc') }}"
        files: |
          binary-win32/*
